// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum WorkspacePhase {
  REVISIT_ACTION_PLAN
  CREATE
  VOTE
}

model Workspace {
  id        Int            @id @default(autoincrement())
  name      String
  column    Column[]
  phase     WorkspacePhase @default(REVISIT_ACTION_PLAN)
  createdAt DateTime       @default(now()) @db.DateTime(0)
  updatedAt DateTime       @default(now()) @db.DateTime(0)
}

model Column {
  id          Int        @id @default(autoincrement())
  name        String
  card        Card[]
  Workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId Int?
}

model Card {
  id       Int     @id @default(autoincrement())
  text     String
  position Int     @default(-1)
  Column   Column? @relation(fields: [columnId], references: [id])
  columnId Int?
}

model ActionPlan {
  id         Int      @id @default(autoincrement())
  text       String
  percentage Int
  assignee   String   @default("unassigned")
  status    Int           @default(0)
  createdAt  DateTime @default(now()) @db.DateTime(0)
  updatedAt  DateTime @default(now()) @db.DateTime(0)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  password      String    @default("")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
